name: Go Tests
on: [push, pull_request]
permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Setup Go Version
        run: echo "GO_VERSION=$(cat .go-version)" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5  # v5.5.0
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Build
        run: go build -v ./...

      - name: Test
        run: |
          ( cd request; go test -race ./... )
          ( cd core; go test -race  ./... )
          ( cd coremain; go test -race ./... )

  test-plugins:
    name: Test Plugins
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Setup Go Version
        run: echo "GO_VERSION=$(cat .go-version)" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5  # v5.5.0
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Build
        run: go build -v ./...

      - name: Test
        run: ( cd plugin; go test -race ./... )

  test-e2e:
    name: Test e2e
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Setup Go Version
        run: echo "GO_VERSION=$(cat .go-version)" >> $GITHUB_ENV

      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5  # v5.5.0
        with:
          go-version: ${{ env.GO_VERSION }}
        id: go

      - name: Build
        run: go build -v ./...

      - name: Test
        run: |
          go install github.com/fatih/faillint@latest
          ( cd test; go test -race ./... )

  test-makefile-release:
    name: Test Makefile.release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Install dependencies
        run: sudo apt-get install make curl

      - name: Test Makefile.release
        run: make GITHUB_ACCESS_TOKEN=x -n release github-push -f Makefile.release

      - name: Test Makefile.docker
        run: make VERSION=x DOCKER=x -n release docker-push -f Makefile.docker

  release-dev-image:
    name: Release Dev Image
    needs: [test, test-makefile-release]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
      - name: Build release binary
        run: make -f Makefile.release release
      - name: Copy relese binaries
        run: |
          mkdir -p build/docker/amd64
          mkdir -p build/docker/arm64
          mkdir -p build/docker/arm
          cp build/linux/amd64/coredns build/docker/amd64/coredns
          cp build/linux/arm64/coredns build/docker/arm64/coredns
          cp build/linux/arm/coredns build/docker/arm/coredns
      - name: Run docker build
        run: make VERSION=latest DOCKER=fr6nco -f Makefile.docker docker-build
      - name: Docker login
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772  # v3.4.0
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish Docker Images
        run: |
          VERSION=$(make -f Makefile.release version)
          make VERSION=$VERSION-dev DOCKER=fr6nco -f Makefile.docker docker-push
